! vars initalized up here but actually print out below

Constant Story "Codename Hickory";
Constant Headline "^^^^^^^^^^";  ! goes below title of game
Constant No_score;



!!!!!!!! Variables !!!!!!!!

Global EnigmaSolved = false;
!Global PuzzleOne = false;

Global ReadyAtLobby = false;

!!!!!!!! End Variables !!!!!!!!


!!!!!!!! Code !!!!!!!!
#Include "Parser";
#Include "VerbLib";


! main() entry point of game code
[Initialise;
print "^^^   The following is a fictional tale.^^^^If you don't know what to do type this:^^  say hello^^^";


location = Lobby;
!move GoldKey to GoldenChest;
move rubikscube to Tupperware;
move BenNickKey to Lobby;
give Tupperware open;


];


Include "Grammar";


! waiting to take your The business is called 'Sandbox Escape Room'^^newline blah.


!!!! rooms

object Lobby "Lobby"
with
description "You are alone in a well lit lobby.  The first half of the room is open and has a few chairs lining either wall.^^
As your perception of the room moves towards the back, you encounter the 'front' desk; Better described as a somewhat shakey three-fold easy assembly table.  A friendly woman stands behind it.

",


n_to WhiteRoom,
s_to BusinessGlassDoor,
has light ;

Object -> BenNickKey "Ben and nicks key",
with description "a regular key",
name 'key';




Object -> BusinessGlassDoor "glass door"
with description "An aluminum frame encases a large pane of glass.  There is a push bar and a sign that says push.  Outside you see a busy two way street with cars lining either side.  You should redirect your focus elsewhere.", 
name 'door' 'glass' 'front' ,
when_closed "Behind you is the entrance door to the establishment.",
when_open "The door is now open.",
door_to ExitRoom,
door_dir s_to,
with_key impossiblekey1,
has static door openable lockable locked;



Object -> "chairs" with
  name "chair" "chairs",
  description "Individual sackable metal chairs with blue upholstery line the walls.  There are 3 on the left and 2 on the right.",
  has scenery;


Object -> "desk" with
  name "front desk" "desk" "table",
  description "A portable table.",
  has scenery;






object WhiteRoom "WhiteRoom"
with
description "The room is white and has x y z pick them up",
n_to BlackRoom,
s_to TrapDoor,
e_to GreenRoom,
w_to RedRoom,


after [;
    Enter:
      give TrapDoor locked;
  ],

initial [;
    print "The woman pushes you into the room. HARD.^^Behind you a very heavy door slams shut.  You hear a suction noise and realize that the door is also airtight.^^^";
  ],



has light ;


Object -> TrapDoor "impossibly strong titanium door"
with description "A very strong door", 
name 'door',
when_closed "",
when_open "software bug",
door_to Lobby,
door_dir s_to,
with_key impossiblekey1,

has static door openable lockable;


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Begin White Room 


! User finds a rpi. user
! The black room is a hidden door IRL and is treated as inaccessable until maybe a 50% story mark
! The note says:
!  Youre trapped in a sandbox.  The 
! 
!  The goal for the first layer is 3 AA batteires to power the pi.  The pi gives you "shell access"
!  but you havent escaped yet. you will need to find 3 buffer overflows to deliver. blah.
!  
! Three plot points.
!
!     a  x
!     b  y
!     c  y
!
! the user escapes the sandbox into the secret room.  now a loud speaker comes on and a recorded message plays
! from a villian type who says you need to steal the files to escape.  User must steal usb stick and plug in at opposite
! corner of room. which will trigger a the unlook which is back through the secret exit.
!
!
! 
!
!
!
!

Object -> "desk" with
  name "front desk" "desk" "table",
  description "A portable table.",
  has scenery;

Object -> "rpi" with
  name "rpi",
  powered 1,
  description "a RPI is here."
  ;

Object -> "Brown Box" with
  name "Brown Box",
  description "A sturdy wooden brown box.";




Object  -> "flashlight"
    with  name 'flashlight' 'torch',
          description "It's a battery-powered flashlight, of the sort that you switch on and off.",
          after [;
            SwitchOn:  give self light;
            SwitchOff: give self ~light;
          ],
          when_on "The flashlight provides a faint glimmer.",
    has   switchable ~on ~light;











object RedRoom "RedRoom"
with
description "",
e_to GreenRoom,
n_to BlackRoom,
s_to Whiteroom,
has light ;

object GreenRoom "GreenRoom"
with
description "",
w_to RedRoom,
n_to BlackRoom,
s_to Whiteroom,
has light ;

object BlackRoom "BlackRoom"
with
description "",
s_to Whiteroom,
e_to GreenRoom,
w_to RedRoom,
has light ;



















object TreasureRoom "Treasure Room"
with
description "This room is quite the same as the previous one.  A new room visible to the East.  Your origin is now South of you.",
s_to InitialRoom,
e_to DragonRoom,
has light ;


object DragonRoom "Dragon Room"
with
description "You can reach the Treasure room by walking West.",
w_to TreasureRoom,
has light ;


object InitialRoom "delme" with desription "delme2" has light;










object Tupperware "Tupperware brand Tupperware."
with description "It has seen better days.  It's the size that is meant for a single sandwitch and I don't need to tell you that the lid is missing",
name 'tupperware',
found_in InitialRoom,


before [;
open : if (false) {
	print "You open the Golden Chest. A bright light came from the inside. You immedialty feel bad." ;
	deadflag = 1;
	rtrue ;
	}

close : if (true) {
	print "There's no lid bro";
	rtrue;
	}

take : 
	print "Why?";
	rtrue;


],

has openable container;




! to put a single quote in an objects name we can use ^ 
object RubiksCube "Rubiks Cube"
with description "A normal sized Rubiks cube built for speed.",
name 'cube' 'rubiks' 'rubik^s' 'rubix',;




object impossiblekey1 "dev key 1";

object Goldkey "golden key"
with description "A small golden key.",
name 'small' 'key' 'golden',
has female;




object ExitRoom "Exit Room"
with
description [;
print "You are free ! Congratulation, you solved this game !^^"; deadflag = 2; rtrue ; 
], 
has light ;


#Include "salesrep";


Object dragon "dragon"
with name 'red' 'dragon' 'animal',
description "A red dragon is standing here. He doesn't stop looking at you.",
initial "A red dragon is here.",
found_in DragonRoom,
life [ word1 word2;

Tell : print "The dragon doesn't listen you.^"; rtrue;
Attack : print "You should not. He can split fire.^"; rtrue ;
Kiss : print "Hmm..no.^";rtrue;

Answer , Ask :
word1 = noun;
word2 = second; 
if (word1==33) {word1=word2;}

switch (word1) { 

'hi', 'hello', 'escuse me' : "Hello and welcome";

'key', 'help','where','what' : "~The exit door is locked. To find the key, you must answer an riddle. If you are ready, I can sing it.~";
'hi', 'hello' : "~Hello, stranger.~";
'door', 'exit', 'lock': "~Hmmm. I can help you to find the key.~";
'enigma', 'game' , 'song', 'riddle' : "~Here is the Riddle : In the morning, it has Four legs. At noon, it has Two legs, and at night, it has Three. What is it ?~";
'enigma' : print "~You solved the Riddle; Congratulations! The key is inside the golden Chest. Watch out, don't try to open the other one !~^"; EnigmaSolved = true; rtrue ;
'solution' : "You must find the answer by yourself."; 
default : print "No answer.^"; rtrue;
}

],
has animate static ;

